@import "../../base/variables";

@mixin responsive-size(
  $type,
  $min-width: 0,
  $max-width: 0,
  $min-height: 0,
  $max-height: 0
) {
  // TYPES: min-width, max-width, min-height, max-height
  @if ($type == $responsive-min-width) {
    @media only screen and (min-width: $min-width) {
      @content;
    }
  }

  @if ($type == $responsive-max-width) {
    @media only screen and (max-width: $max-width) {
      @content;
    }
  }

  @if ($type == $responsive-min-height) {
    @media only screen and (min-height: $min-height) {
      @content;
    }
  }

  @if ($type == $responsive-max-height) {
    @media only screen and (max-height: $max-height) {
      @content;
    }
  }

  // TYPES: min-width-max-width, min-width-min-height, min-width-max-height
  @if ($type == $responsive-min-width-max-width) {
    @media only screen and (min-width: $min-width) and (max-width: $max-width) {
      @content;
    }
  }

  @if ($type == $responsive-min-width-min-height) {
    @media only screen and (min-width: $min-width) and (min-height: $min-height) {
      @content;
    }
  }

  @if ($type == $responsive-min-width-max-height) {
    @media only screen and (min-width: $min-width) and (max-height: $max-height) {
      @content;
    }
  }

  // TYPES: max-width-min-height, max-width-max-height
  @if ($type == $responsive-max-width-min-height) {
    @media only screen and (max-width: $max-width) and (min-height: $min-height) {
      @content;
    }
  }

  @if ($type == $responsive-max-width-max-height) {
    @media only screen and (max-width: $max-width) and ($max-height: $max-height) {
      @content;
    }
  }

  // TYPES: min-height-max-height
  @if ($type == $responsive-min-height-max-height) {
    @media only screen and (min-height: $min-height) and ($max-height: $max-height) {
      @content;
    }
  }
}
